version: '3.8'

services:
  web-prod:
    build:
      context: .
      dockerfile: Containerfile.prod
    ports:
      - "8001:8000"
    environment:
      - TICKETMASTER_API_KEY=${TICKETMASTER_API_KEY}
      - DJANGO_SETTINGS_MODULE=music_events_project.settings.prod
      - DJANGO_DEBUG=True
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-secure-production-key}
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_DB=musicevents
      - POSTGRES_USER=musicevents
      - POSTGRES_PASSWORD=musicevents
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://localhost:8001
      - DJANGO_SECURE_SSL_REDIRECT=False
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    volumes:
      - django_media:/app/media
      - django_staticfiles:/app/staticfiles
    depends_on:
      - db
    command: >
      bash -c "/.venv/bin/python3 manage.py migrate --noinput &&
               /.venv/bin/python3 manage.py collectstatic --noinput &&
               /.venv/bin/python3 manage.py ensure_admin &&
               gunicorn music_events_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 4 --timeout 30 --preload --log-level debug --enable-stdio-inheritance --capture-output --access-logfile -"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=musicevents
      - POSTGRES_USER=musicevents
      - POSTGRES_PASSWORD=musicevents
    ports:
      - "5432:5432"

volumes:
  postgres_data:
  django_staticfiles:
  django_media:
